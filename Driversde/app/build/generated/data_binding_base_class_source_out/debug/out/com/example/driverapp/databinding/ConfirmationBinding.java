// Generated by view binder compiler. Do not edit!
package com.example.driverapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.driverapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ConfirmationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button Button09;

  @NonNull
  public final Button Button10;

  @NonNull
  public final ImageView imageView04;

  @NonNull
  public final TextView textView09;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView textView14;

  private ConfirmationBinding(@NonNull ConstraintLayout rootView, @NonNull Button Button09,
      @NonNull Button Button10, @NonNull ImageView imageView04, @NonNull TextView textView09,
      @NonNull TextView textView10, @NonNull TextView textView11, @NonNull TextView textView12,
      @NonNull TextView textView13, @NonNull TextView textView14) {
    this.rootView = rootView;
    this.Button09 = Button09;
    this.Button10 = Button10;
    this.imageView04 = imageView04;
    this.textView09 = textView09;
    this.textView10 = textView10;
    this.textView11 = textView11;
    this.textView12 = textView12;
    this.textView13 = textView13;
    this.textView14 = textView14;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ConfirmationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ConfirmationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.confirmation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ConfirmationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Button09;
      Button Button09 = ViewBindings.findChildViewById(rootView, id);
      if (Button09 == null) {
        break missingId;
      }

      id = R.id.Button10;
      Button Button10 = ViewBindings.findChildViewById(rootView, id);
      if (Button10 == null) {
        break missingId;
      }

      id = R.id.imageView04;
      ImageView imageView04 = ViewBindings.findChildViewById(rootView, id);
      if (imageView04 == null) {
        break missingId;
      }

      id = R.id.textView09;
      TextView textView09 = ViewBindings.findChildViewById(rootView, id);
      if (textView09 == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      return new ConfirmationBinding((ConstraintLayout) rootView, Button09, Button10, imageView04,
          textView09, textView10, textView11, textView12, textView13, textView14);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
